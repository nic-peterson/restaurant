(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>b});var r=t(537),a=t.n(r),o=t(645),i=t.n(o),c=t(667),s=t.n(c),l=new URL(t(512),t.b),d=new URL(t(299),t.b),u=new URL(t(632),t.b),A=new URL(t(43),t.b),p=i()(a()),m=s()(l),f=s()(d),g=s()(u),v=s()(A);p.push([n.id,"body,\nhtml {\n  height: 100vh;\n  width: 100vw;\n  margin: 0;\n  color: black;\n}\n\n* {\n  box-sizing: border-box;\n}\n\n@font-face {\n  font-family: barlow-regular;\n  src: url("+m+");\n}\n\n@font-face {\n  font-family: bebasneue-regular;\n  src: url("+f+");\n}\n\n#content {\n  background: linear-gradient(\n      0deg,\n      rgba(255, 255, 255, 0.8),\n      rgba(255, 255, 255, 0.8)\n    ),\n    url("+g+");\n  height: 100%;\n\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n}\n\n#nav {\n  display: flex;\n  column-gap: 3rem;\n  cursor: pointer;\n  margin: 2rem 0;\n  font-family: bebasneue-regular, sans-serif;\n  font-size: 2.5rem;\n  color: #9f7640;\n  align-items: center;\n  justify-content: center;\n}\n\n#logo {\n  background: url("+v+");\n  width: 392px;\n  height: 153px;\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding: 0;\n  margin: 0;\n}\n\n.contact {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-family: barlow-regular, sans-serif;\n}\n\n.title {\n  font-size: 4rem;\n}\n\n.sub-title {\n  font-size: 3rem;\n}\n\n.contact-info {\n  width: 100%;\n}\n\n.meal-title {\n  font-weight: bold;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;EAEE,aAAa;EACb,YAAY;EACZ,SAAS;EACT,YAAY;AACd;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,2BAA2B;EAC3B,4CAAuC;AACzC;;AAEA;EACE,8BAA8B;EAC9B,4CAA0C;AAC5C;;AAEA;EACE;;;;;2CAKoC;EACpC,YAAY;;EAEZ,2BAA2B;EAC3B,4BAA4B;EAC5B,sBAAsB;;EAEtB,aAAa;EACb,sBAAsB;EACtB,2BAA2B;EAC3B,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,gBAAgB;EAChB,eAAe;EACf,cAAc;EACd,0CAA0C;EAC1C,iBAAiB;EACjB,cAAc;EACd,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,mDAAyC;EACzC,YAAY;EACZ,aAAa;EACb,4BAA4B;EAC5B,sBAAsB;EACtB,UAAU;EACV,SAAS;AACX;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,uCAAuC;AACzC;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,iBAAiB;AACnB",sourcesContent:['body,\nhtml {\n  height: 100vh;\n  width: 100vw;\n  margin: 0;\n  color: black;\n}\n\n* {\n  box-sizing: border-box;\n}\n\n@font-face {\n  font-family: barlow-regular;\n  src: url("./assets/Barlow-Regular.ttf");\n}\n\n@font-face {\n  font-family: bebasneue-regular;\n  src: url("./assets/BebasNeue-Regular.ttf");\n}\n\n#content {\n  background: linear-gradient(\n      0deg,\n      rgba(255, 255, 255, 0.8),\n      rgba(255, 255, 255, 0.8)\n    ),\n    url("./assets/MainBackground.png");\n  height: 100%;\n\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n}\n\n#nav {\n  display: flex;\n  column-gap: 3rem;\n  cursor: pointer;\n  margin: 2rem 0;\n  font-family: bebasneue-regular, sans-serif;\n  font-size: 2.5rem;\n  color: #9f7640;\n  align-items: center;\n  justify-content: center;\n}\n\n#logo {\n  background: url("./assets/causwells.png");\n  width: 392px;\n  height: 153px;\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding: 0;\n  margin: 0;\n}\n\n.contact {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-family: barlow-regular, sans-serif;\n}\n\n.title {\n  font-size: 4rem;\n}\n\n.sub-title {\n  font-size: 3rem;\n}\n\n.contact-info {\n  width: 100%;\n}\n\n.meal-title {\n  font-weight: bold;\n}'],sourceRoot:""}]);const b=p},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var l=0;l<n.length;l++){var d=[].concat(n[l]);r&&i[d[0]]||(void 0!==o&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=o),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),a&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=a):d[4]="".concat(a)),e.push(d))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},i=[],c=0;c<n.length;c++){var s=n[c],l=r.base?s[0]+r.base:s[0],d=o[l]||0,u="".concat(l," ").concat(d);o[l]=d+1;var A=t(u),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==A)e[A].references++,e[A].updater(p);else{var m=a(p,r);r.byIndex=c,e.splice(c,0,{identifier:u,updater:m,references:1})}i.push(u)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var o=r(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var c=t(o[i]);e[c].references--}for(var s=r(n,a),l=0;l<o.length;l++){var d=t(o[l]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}o=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},512:(n,e,t)=>{n.exports=t.p+"e7eb634d040a6f384033.ttf"},299:(n,e,t)=>{n.exports=t.p+"12e3683f9192436a7be8.ttf"},632:(n,e,t)=>{n.exports=t.p+"3953fb8dad9ea432a067.png"},575:(n,e,t)=>{n.exports=t.p+"106ebefb6a087a79b1d6.jpeg"},43:(n,e,t)=>{n.exports=t.p+"14c59530bdcaa7f740d6.png"},250:(n,e,t)=>{n.exports=t.p+"6a5967cb43897e24a41a.jpeg"}},e={};function t(r){var a=e[r];if(void 0!==a)return a.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,(()=>{const n=function(n){const{name:e,img:t,desc:r,id:a}=n,o=document.createElement("div");return o.setAttribute("class","card"),o.setAttribute("id",a),o.innerHTML=`<div class="name">${e}</div>\n    <img src="${t}">\n    <div class="desc">${r}</div>`,o};var e=t(575),r=t(250),a=t(379),o=t.n(a),i=t(795),c=t.n(i),s=t(569),l=t.n(s),d=t(565),u=t.n(d),A=t(216),p=t.n(A),m=t(589),f=t.n(m),g=t(426),v={};v.styleTagTransform=f(),v.setAttributes=u(),v.insert=l().bind(null,"head"),v.domAPI=c(),v.insertStyleElement=p(),o()(g.Z,v),g.Z&&g.Z.locals&&g.Z.locals;const b=function(){const t=document.querySelector("#content"),a=document.createElement("div"),o=new Image;o.src=e;const i=n({name:"Chef Adam Rosenblum",img:o,desc:"A native of Maryland, Chef Adam opened Causwells in 2014 and is the owner of Alba Ray’s, a creole brunch spot in San Francisco’s Mission neighborhood.",id:"owner-adam"}),c=new Image;c.src=r;const s=n({name:"Tom Patella",img:c,desc:"A former art teacher from Santa Clarita, California, owner Tom Patella has always held a passion for restaurants.",id:"owner-tom"});a.setAttribute("class","about"),a.textContent="About",a.appendChild(i),a.appendChild(s),t.appendChild(a)},h=function(){const n=document.querySelector("#content");for(n.style="";n.children.length>2;)n.children[2].remove()};!function(){const n=document.querySelector("#content"),e=function(){const n=document.createElement("div");return n.setAttribute("id","nav"),["about","menu","contact"].forEach((e=>{const t=document.createElement("div");var r;t.setAttribute("id",`nav-${e}`),t.setAttribute("class","nav-item"),t.textContent=(r=e).charAt(0).toUpperCase()+r.slice(1),n.appendChild(t)})),n}();n.appendChild(e);const t=document.createElement("div");t.setAttribute("id","logo"),n.appendChild(t),b()}();const C=document.querySelector("#nav-about"),E=document.querySelector("#nav-menu"),y=document.querySelector("#nav-contact");C.addEventListener("click",(function(){h(),b()})),E.addEventListener("click",(function(){h(),function(){const e=document.querySelector("#content"),t=document.createElement("div");t.setAttribute("class","menu");const r=document.createElement("div");r.textContent="Menu",t.appendChild(r);const a=document.createElement("div");[{name:"CRISPY CHICKEN $15",img:"./assets/chicken.jpeg",desc:"roasted garlic aioli, pickle, cilantro slaw",id:"menu-chicken"},{name:"AMERICANA BURGER $20",img:"./assets/americana.jpeg",desc:"american cheese, causwells sauce, lettuce, pickle, onion",id:"menu-americana"},{name:"MELON & HERB SALAD $12",img:"./assets/melon.jpeg",desc:"melon, cucumber, queso fresco",id:"menu-salad"},{name:"HOUSE MADE RICOTTA $14",img:"./assets/ricotta.jpeg",desc:"rosemary honey, lavosh",id:"menu-ricotta"}].forEach((e=>{const t=n(e);a.appendChild(t)})),t.appendChild(a),e.appendChild(t)}()})),y.addEventListener("click",(function(){h(),function(){const n=document.querySelector("#content"),e=document.createElement("div");e.setAttribute("class","contact"),e.innerHTML='<div class="page-title">Contact</div>\n  <div class="contact-section">\n    <div class="section-title">Causwells</div>\n    <div class="contact-info">\n        <p id="address">2346 Chestnut Street, San Francisco, CA 94123\n        </p>\n        <p id="phone-num">415-447-6081</p>\n        <p id="email">info@causwells.com</p>\n    </div>\n  </div>\n  <div class="hours-section">\n    <div class="section-title">Hours</div>\n    <div class="meal" id="dinner">\n        <div class="meal-title">Dinner</div>\n        <div class="meal-hours">Tuesday - Sunday 5PM - 10PM</div>\n    </div>\n    <div class="meal" id="brunch">\n        <div class="meal-title">Brunch</div>\n        <div class="meal-hours">Friday - Sunday 10AM - 3PM</div>\n    </div>\n    <div class="meal" id="monday">\n        <div class="meal-title">Monday-CLOSED</div>\n    </div>\n  </div>',n.appendChild(e)}()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,